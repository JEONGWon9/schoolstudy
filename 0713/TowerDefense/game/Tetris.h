#pragma once

#include "iStd.h"

void loadTetris();
void freeTetris();
void drawTetris(float dt);
void keyTetris(iKeyState stat, iPoint point);


// 블럭유형 - 2택1, 움직 & 안움직
// 출현블럭

// 블럭 충돌

// 블럭 제거 & 블럭생성

// 게임 오버

// type 2
struct NewBlock
{
	int num;
	uint8 block[5][2];
};

#if 0// type 1
uint8 _newBlock[5][16] =
{
	{
		0, 1, 0, 0,
		0, 1, 0, 0,
		0, 1, 0, 0,
		0, 1, 0, 0,
	},
	{
		0, 0, 0, 0,
		1, 1, 1, 1,
		0, 0, 0, 1,
		0, 0, 0, 0,
	},
	{
		0, 0, 0, 0,
		1, 1, 1, 1,
		1, 0, 0, 0,
		0, 0, 0, 0,
	},
	{
		0, 0, 0, 0,
		1, 1, 1, 0,
		0, 1, 0, 0,
		0, 0, 0, 0,
	},
	{
		0, 0, 0, 0,
		0, 1, 1, 0,
		0, 1, 1, 0,
		0, 0, 0, 0,
	},
};
uint8 newBlock[16];
void rotateBlock(uint8* block, bool cw)
{
	// 0, 0, 0, 0,
	// 1, 1, 1, 1,
	// 0, 0, 0, 1,
	// 0, 0, 0, 0,

	// (0,0) => (0,3)
	// (1,0) => (0,2)
	// (2,0) => (0,1)
	// (3,0) => (0,0)

	// (0,0) => (0,3)
	// (0,1) => (1,3)
	// (0,2) => (2,3)
	// (0,3) => (3,3)

	// (0,3) => (3,3)
	// (1,3) => (3,2)
	// (2,3) => (3,1)
	// (3,3) => (3,0)

	// (3,0) => (0,0)
	// (3,1) => (0,1)
	// (3,2) => (0,2)
	// (3,3) => (0,3)
	uint8 b[16] = {

	};
	memcpy(block, b, sizeof(uint8) * 16);
}
#endif

